{
    "description": "You are given an array <code>nums</code> and an integer <code>k</code>. You need to find a <span data-keyword=\"subarray-nonempty\" class=\" cursor-pointer relative text-dark-blue-s text-sm\"><div class=\"popover-wrapper inline-block\" data-headlessui-state=\"\"><div><div aria-expanded=\"false\" data-headlessui-state=\"\" id=\"headlessui-popover-button-:rr:\"><div>subarray</div></div><div style=\"position: fixed; z-index: 40; inset: 0px auto auto 0px; transform: translate(52px, 236px);\"></div></div></div></span> of <code>nums</code> such that the <strong>absolute difference</strong> between <code>k</code> and the bitwise <code>OR</code> of the subarray elements is as<strong> small</strong> as possible. In other words, select a subarray <code>nums[l..r]</code> such that <code>|k - (nums[l] OR nums[l + 1] ... OR nums[r])|</code> is minimum.\n\nReturn the <strong>minimum</strong> possible value of the absolute difference.\n\nA <strong>subarray</strong> is a contiguous <b>non-empty</b> sequence of elements within an array.\n\n",
    "tags": [
        {
            "name": "Array",
            "url": "https://leetcode.com/tag/array/"
        },
        {
            "name": "Binary Search",
            "url": "https://leetcode.com/tag/binary-search/"
        },
        {
            "name": "Bit Manipulation",
            "url": "https://leetcode.com/tag/bit-manipulation/"
        },
        {
            "name": "Segment Tree",
            "url": "https://leetcode.com/tag/segment-tree/"
        }
    ]
}