{
    "description": "Implement the <code>BSTIterator</code> class that represents an iterator over the <strong><a href=\"https://en.wikipedia.org/wiki/Tree_traversal#In-order_(LNR)\" target=\"_blank\">in-order traversal</a></strong> of a binary search tree (BST):\n\nNotice that by initializing the pointer to a non-existent smallest number, the first call to <code>next()</code> will return the smallest element in the BST.\n\nYou may assume that <code>next()</code> calls will always be valid. That is, there will be at least a next number in the in-order traversal when <code>next()</code> is called.\n\n",
    "tags": [
        {
            "name": "Stack",
            "url": "https://leetcode.com/tag/stack/"
        },
        {
            "name": "Tree",
            "url": "https://leetcode.com/tag/tree/"
        },
        {
            "name": "Design",
            "url": "https://leetcode.com/tag/design/"
        },
        {
            "name": "Binary Search Tree",
            "url": "https://leetcode.com/tag/binary-search-tree/"
        },
        {
            "name": "Binary Tree",
            "url": "https://leetcode.com/tag/binary-tree/"
        },
        {
            "name": "Iterator",
            "url": "https://leetcode.com/tag/iterator/"
        }
    ]
}