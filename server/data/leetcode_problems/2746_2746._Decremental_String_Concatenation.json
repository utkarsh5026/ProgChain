{
    "description": "You are given a <strong>0-indexed</strong> array <code>words</code> containing <code>n</code> strings.\n\nLet's define a <strong>join</strong> operation <code>join(x, y)</code> between two strings <code>x</code> and <code>y</code> as concatenating them into <code>xy</code>. However, if the last character of <code>x</code> is equal to the first character of <code>y</code>, one of them is <strong>deleted</strong>.\n\nFor example <code>join(\"ab\", \"ba\") = \"aba\"</code> and <code>join(\"ab\", \"cde\") = \"abcde\"</code>.\n\nYou are to perform <code>n - 1</code> <strong>join</strong> operations. Let <code>str<sub>0</sub> = words[0]</code>. Starting from <code>i = 1</code> up to <code>i = n - 1</code>, for the <code>i<sup>th</sup></code> operation, you can do one of the following:\n\nYour task is to <strong>minimize</strong> the length of <code>str<sub>n - 1</sub></code>.\n\nReturn <em>an integer denoting the minimum possible length of</em> <code>str<sub>n - 1</sub></code>.\n\n",
    "tags": [
        {
            "name": "Array",
            "url": "https://leetcode.com/tag/array/"
        },
        {
            "name": "String",
            "url": "https://leetcode.com/tag/string/"
        },
        {
            "name": "Dynamic Programming",
            "url": "https://leetcode.com/tag/dynamic-programming/"
        }
    ]
}