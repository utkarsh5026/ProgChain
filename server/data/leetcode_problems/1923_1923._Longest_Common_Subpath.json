{
    "description": "There is a country of <code>n</code> cities numbered from <code>0</code> to <code>n - 1</code>. In this country, there is a road connecting <b>every pair</b> of cities.\n\nThere are <code>m</code> friends numbered from <code>0</code> to <code>m - 1</code> who are traveling through the country. Each one of them will take a path consisting of some cities. Each path is represented by an integer array that contains the visited cities in order. The path may contain a city <strong>more than once</strong>, but the same city will not be listed consecutively.\n\nGiven an integer <code>n</code> and a 2D integer array <code>paths</code> where <code>paths[i]</code> is an integer array representing the path of the <code>i<sup>th</sup></code> friend, return <em>the length of the <strong>longest common subpath</strong> that is shared by <strong>every</strong> friend's path, or </em><code>0</code><em> if there is no common subpath at all</em>.\n\nA <strong>subpath</strong> of a path is a contiguous sequence of cities within that path.\n\n",
    "tags": [
        {
            "name": "Array",
            "url": "https://leetcode.com/tag/array/"
        },
        {
            "name": "Binary Search",
            "url": "https://leetcode.com/tag/binary-search/"
        },
        {
            "name": "Rolling Hash",
            "url": "https://leetcode.com/tag/rolling-hash/"
        },
        {
            "name": "Suffix Array",
            "url": "https://leetcode.com/tag/suffix-array/"
        },
        {
            "name": "Hash Function",
            "url": "https://leetcode.com/tag/hash-function/"
        }
    ]
}