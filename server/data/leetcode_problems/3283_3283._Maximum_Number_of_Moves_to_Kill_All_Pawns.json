{
    "description": "There is a <code>50 x 50</code> chessboard with <strong>one</strong> knight and some pawns on it. You are given two integers <code>kx</code> and <code>ky</code> where <code>(kx, ky)</code> denotes the position of the knight, and a 2D array <code>positions</code> where <code>positions[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> denotes the position of the pawns on the chessboard.\n\nAlice and Bob play a <em>turn-based</em> game, where Alice goes first. In each player's turn:\n\nAlice is trying to <strong>maximize</strong> the <strong>sum</strong> of the number of moves made by <em>both</em> players until there are no more pawns on the board, whereas Bob tries to <strong>minimize</strong> them.\n\nReturn the <strong>maximum</strong> <em>total</em> number of moves made during the game that Alice can achieve, assuming both players play <strong>optimally</strong>.\n\nNote that in one <strong>move, </strong>a chess knight has eight possible positions it can move to, as illustrated below. Each move is two cells in a cardinal direction, then one cell in an orthogonal direction.\n\n<img src=\"https://assets.leetcode.com/uploads/2024/08/01/chess_knight.jpg\" style=\"width: 275px; height: 273px;\">\n\n",
    "tags": [
        {
            "name": "Array",
            "url": "https://leetcode.com/tag/array/"
        },
        {
            "name": "Math",
            "url": "https://leetcode.com/tag/math/"
        },
        {
            "name": "Bit Manipulation",
            "url": "https://leetcode.com/tag/bit-manipulation/"
        },
        {
            "name": "Breadth-First Search",
            "url": "https://leetcode.com/tag/breadth-first-search/"
        },
        {
            "name": "Game Theory",
            "url": "https://leetcode.com/tag/game-theory/"
        },
        {
            "name": "Bitmask",
            "url": "https://leetcode.com/tag/bitmask/"
        }
    ]
}