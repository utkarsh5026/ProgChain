{
    "description": "A kingdom consists of a king, his children, his grandchildren, and so on. Every once in a while, someone in the family dies or a child is born.\n\nThe kingdom has a well-defined order of inheritance that consists of the king as the first member. Let's define the recursive function <code>Successor(x, curOrder)</code>, which given a person <code>x</code> and the inheritance order so far, returns who should be the next person after <code>x</code> in the order of inheritance.\n\nFor example, assume we have a kingdom that consists of the king, his children Alice and Bob (Alice is older than Bob), and finally Alice's son Jack.\n\nUsing the above function, we can always obtain a unique order of inheritance.\n\nImplement the <code>ThroneInheritance</code> class:\n\n",
    "tags": [
        {
            "name": "Hash Table",
            "url": "https://leetcode.com/tag/hash-table/"
        },
        {
            "name": "Tree",
            "url": "https://leetcode.com/tag/tree/"
        },
        {
            "name": "Depth-First Search",
            "url": "https://leetcode.com/tag/depth-first-search/"
        },
        {
            "name": "Design",
            "url": "https://leetcode.com/tag/design/"
        }
    ]
}