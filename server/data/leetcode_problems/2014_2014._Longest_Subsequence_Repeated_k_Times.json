{
    "description": "You are given a string <code>s</code> of length <code>n</code>, and an integer <code>k</code>. You are tasked to find the <strong>longest subsequence repeated</strong> <code>k</code> times in string <code>s</code>.\n\nA <strong>subsequence</strong> is a string that can be derived from another string by deleting some or no characters without changing the order of the remaining characters.\n\nA subsequence <code>seq</code> is <strong>repeated</strong> <code>k</code> times in the string <code>s</code> if <code>seq * k</code> is a subsequence of <code>s</code>, where <code>seq * k</code> represents a string constructed by concatenating <code>seq</code> <code>k</code> times.\n\nReturn <em>the <strong>longest subsequence repeated</strong> </em><code>k</code><em> times in string </em><code>s</code><em>. If multiple such subsequences are found, return the <strong>lexicographically largest</strong> one. If there is no such subsequence, return an <strong>empty</strong> string</em>.\n\n",
    "tags": [
        {
            "name": "String",
            "url": "https://leetcode.com/tag/string/"
        },
        {
            "name": "Backtracking",
            "url": "https://leetcode.com/tag/backtracking/"
        },
        {
            "name": "Greedy",
            "url": "https://leetcode.com/tag/greedy/"
        },
        {
            "name": "Counting",
            "url": "https://leetcode.com/tag/counting/"
        },
        {
            "name": "Enumeration",
            "url": "https://leetcode.com/tag/enumeration/"
        }
    ]
}