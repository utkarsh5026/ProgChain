{
    "description": "You are given two arrays <code>nums</code> and <code>andValues</code> of length <code>n</code> and <code>m</code> respectively.\n\nThe <strong>value</strong> of an array is equal to the <strong>last</strong> element of that array.\n\nYou have to divide <code>nums</code> into <code>m</code> <strong>disjoint contiguous</strong> <span data-keyword=\"subarray-nonempty\" class=\" cursor-pointer relative text-dark-blue-s text-sm\"><div class=\"popover-wrapper inline-block\" data-headlessui-state=\"\"><div><div aria-expanded=\"false\" data-headlessui-state=\"\" id=\"headlessui-popover-button-:ro:\"><div>subarrays</div></div><div style=\"position: fixed; z-index: 40; inset: 0px auto auto 0px; transform: translate(387px, 310px);\"></div></div></div></span> such that for the <code>i<sup>th</sup></code> subarray <code>[l<sub>i</sub>, r<sub>i</sub>]</code>, the bitwise <code>AND</code> of the subarray elements is equal to <code>andValues[i]</code>, in other words, <code>nums[l<sub>i</sub>] &amp; nums[l<sub>i</sub> + 1] &amp; ... &amp; nums[r<sub>i</sub>] == andValues[i]</code> for all <code>1 &lt;= i &lt;= m</code>, where <code>&amp;</code> represents the bitwise <code>AND</code> operator.\n\nReturn <em>the <strong>minimum</strong> possible sum of the <strong>values</strong> of the </em><code>m</code><em> subarrays </em><code>nums</code><em> is divided into</em>. <em>If it is not possible to divide </em><code>nums</code><em> into </em><code>m</code><em> subarrays satisfying these conditions, return</em> <code>-1</code>.\n\n",
    "tags": [
        {
            "name": "Array",
            "url": "https://leetcode.com/tag/array/"
        },
        {
            "name": "Binary Search",
            "url": "https://leetcode.com/tag/binary-search/"
        },
        {
            "name": "Dynamic Programming",
            "url": "https://leetcode.com/tag/dynamic-programming/"
        },
        {
            "name": "Bit Manipulation",
            "url": "https://leetcode.com/tag/bit-manipulation/"
        },
        {
            "name": "Segment Tree",
            "url": "https://leetcode.com/tag/segment-tree/"
        },
        {
            "name": "Queue",
            "url": "https://leetcode.com/tag/queue/"
        }
    ]
}