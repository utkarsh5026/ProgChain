{
    "description": "You are given an <code>m x n</code> binary matrix <code>grid</code> and an integer <code>health</code>.\n\nYou start on the upper-left corner <code>(0, 0)</code> and would like to get to the lower-right corner <code>(m - 1, n - 1)</code>.\n\nYou can move up, down, left, or right from one cell to another adjacent cell as long as your health <em>remains</em> <strong>positive</strong>.\n\nCells <code>(i, j)</code> with <code>grid[i][j] = 1</code> are considered <strong>unsafe</strong> and reduce your health by 1.\n\nReturn <code>true</code> if you can reach the final cell with a health value of 1 or more, and <code>false</code> otherwise.\n\n",
    "tags": [
        {
            "name": "Array",
            "url": "https://leetcode.com/tag/array/"
        },
        {
            "name": "Breadth-First Search",
            "url": "https://leetcode.com/tag/breadth-first-search/"
        },
        {
            "name": "Graph",
            "url": "https://leetcode.com/tag/graph/"
        },
        {
            "name": "Heap (Priority Queue)",
            "url": "https://leetcode.com/tag/heap-priority-queue/"
        },
        {
            "name": "Matrix",
            "url": "https://leetcode.com/tag/matrix/"
        },
        {
            "name": "Shortest Path",
            "url": "https://leetcode.com/tag/shortest-path/"
        }
    ]
}