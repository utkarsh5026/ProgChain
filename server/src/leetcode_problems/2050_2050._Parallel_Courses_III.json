{
    "description": "You are given an integer <code>n</code>, which indicates that there are <code>n</code> courses labeled from <code>1</code> to <code>n</code>. You are also given a 2D integer array <code>relations</code> where <code>relations[j] = [prevCourse<sub>j</sub>, nextCourse<sub>j</sub>]</code> denotes that course <code>prevCourse<sub>j</sub></code> has to be completed <strong>before</strong> course <code>nextCourse<sub>j</sub></code> (prerequisite relationship). Furthermore, you are given a <strong>0-indexed</strong> integer array <code>time</code> where <code>time[i]</code> denotes how many <strong>months</strong> it takes to complete the <code>(i+1)<sup>th</sup></code> course.\n\nYou must find the <strong>minimum</strong> number of months needed to complete all the courses following these rules:\n\nReturn <em>the <strong>minimum</strong> number of months needed to complete all the courses</em>.\n\n<strong>Note:</strong> The test cases are generated such that it is possible to complete every course (i.e., the graph is a directed acyclic graph).\n\n",
    "tags": [
        {
            "name": "Array",
            "url": "https://leetcode.com/tag/array/"
        },
        {
            "name": "Dynamic Programming",
            "url": "https://leetcode.com/tag/dynamic-programming/"
        },
        {
            "name": "Graph",
            "url": "https://leetcode.com/tag/graph/"
        },
        {
            "name": "Topological Sort",
            "url": "https://leetcode.com/tag/topological-sort/"
        }
    ]
}