{
    "description": "Design your implementation of the circular queue. The circular queue is a linear data structure in which the operations are performed based on FIFO (First In First Out) principle, and the last position is connected back to the first position to make a circle. It is also called \"Ring Buffer\".\n\nOne of the benefits of the circular queue is that we can make use of the spaces in front of the queue. In a normal queue, once the queue becomes full, we cannot insert the next element even if there is a space in front of the queue. But using the circular queue, we can use the space to store new values.\n\nImplement the <code>MyCircularQueue</code> class:\n\nYou must solve the problem without using the built-in queue data structure in your programming language.&nbsp;\n\n",
    "tags": [
        {
            "name": "Array",
            "url": "https://leetcode.com/tag/array/"
        },
        {
            "name": "Linked List",
            "url": "https://leetcode.com/tag/linked-list/"
        },
        {
            "name": "Design",
            "url": "https://leetcode.com/tag/design/"
        },
        {
            "name": "Queue",
            "url": "https://leetcode.com/tag/queue/"
        }
    ]
}