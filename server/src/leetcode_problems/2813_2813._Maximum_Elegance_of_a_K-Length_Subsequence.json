{
    "description": "You are given a <strong>0-indexed</strong> 2D integer array <code>items</code> of length <code>n</code> and an integer <code>k</code>.\n\n<code>items[i] = [profit<sub>i</sub>, category<sub>i</sub>]</code>, where <code>profit<sub>i</sub></code> and <code>category<sub>i</sub></code> denote the profit and category of the <code>i<sup>th</sup></code> item respectively.\n\nLet's define the <strong>elegance</strong> of a <strong>subsequence</strong> of <code>items</code> as <code>total_profit + distinct_categories<sup>2</sup></code>, where <code>total_profit</code> is the sum of all profits in the subsequence, and <code>distinct_categories</code> is the number of <strong>distinct</strong> categories from all the categories in the selected subsequence.\n\nYour task is to find the <strong>maximum elegance</strong> from all subsequences of size <code>k</code> in <code>items</code>.\n\nReturn <em>an integer denoting the maximum elegance of a subsequence of </em><code>items</code><em> with size exactly </em><code>k</code>.\n\n<strong>Note:</strong> A subsequence of an array is a new array generated from the original array by deleting some elements (possibly none) without changing the remaining elements' relative order.\n\n",
    "tags": [
        {
            "name": "Array",
            "url": "https://leetcode.com/tag/array/"
        },
        {
            "name": "Hash Table",
            "url": "https://leetcode.com/tag/hash-table/"
        },
        {
            "name": "Stack",
            "url": "https://leetcode.com/tag/stack/"
        },
        {
            "name": "Greedy",
            "url": "https://leetcode.com/tag/greedy/"
        },
        {
            "name": "Sorting",
            "url": "https://leetcode.com/tag/sorting/"
        },
        {
            "name": "Heap (Priority Queue)",
            "url": "https://leetcode.com/tag/heap-priority-queue/"
        }
    ]
}