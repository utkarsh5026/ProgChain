{
    "description": "There are some robots and factories on the X-axis. You are given an integer array <code>robot</code> where <code>robot[i]</code> is the position of the <code>i<sup>th</sup></code> robot. You are also given a 2D integer array <code>factory</code> where <code>factory[j] = [position<sub>j</sub>, limit<sub>j</sub>]</code> indicates that <code>position<sub>j</sub></code> is the position of the <code>j<sup>th</sup></code> factory and that the <code>j<sup>th</sup></code> factory can repair at most <code>limit<sub>j</sub></code> robots.\n\nThe positions of each robot are <strong>unique</strong>. The positions of each factory are also <strong>unique</strong>. Note that a robot can be <strong>in the same position</strong> as a factory initially.\n\nAll the robots are initially broken; they keep moving in one direction. The direction could be the negative or the positive direction of the X-axis. When a robot reaches a factory that did not reach its limit, the factory repairs the robot, and it stops moving.\n\n<strong>At any moment</strong>, you can set the initial direction of moving for <strong>some</strong> robot. Your target is to minimize the total distance traveled by all the robots.\n\nReturn <em>the minimum total distance traveled by all the robots</em>. The test cases are generated such that all the robots can be repaired.\n\n<strong>Note that</strong>\n\n",
    "tags": [
        {
            "name": "Array",
            "url": "https://leetcode.com/tag/array/"
        },
        {
            "name": "Dynamic Programming",
            "url": "https://leetcode.com/tag/dynamic-programming/"
        },
        {
            "name": "Sorting",
            "url": "https://leetcode.com/tag/sorting/"
        }
    ]
}