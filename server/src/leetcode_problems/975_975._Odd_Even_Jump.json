{
    "description": "You are given an integer array <code>arr</code>. From some starting index, you can make a series of jumps. The (1<sup>st</sup>, 3<sup>rd</sup>, 5<sup>th</sup>, ...) jumps in the series are called <strong>odd-numbered jumps</strong>, and the (2<sup>nd</sup>, 4<sup>th</sup>, 6<sup>th</sup>, ...) jumps in the series are called <strong>even-numbered jumps</strong>. Note that the <strong>jumps</strong> are numbered, not the indices.\n\nYou may jump forward from index <code>i</code> to index <code>j</code> (with <code>i &lt; j</code>) in the following way:\n\nA starting index is <strong>good</strong> if, starting from that index, you can reach the end of the array (index <code>arr.length - 1</code>) by jumping some number of times (possibly 0 or more than once).\n\nReturn <em>the number of <strong>good</strong> starting indices</em>.\n\n",
    "tags": [
        {
            "name": "Array",
            "url": "https://leetcode.com/tag/array/"
        },
        {
            "name": "Dynamic Programming",
            "url": "https://leetcode.com/tag/dynamic-programming/"
        },
        {
            "name": "Stack",
            "url": "https://leetcode.com/tag/stack/"
        },
        {
            "name": "Monotonic Stack",
            "url": "https://leetcode.com/tag/monotonic-stack/"
        },
        {
            "name": "Ordered Set",
            "url": "https://leetcode.com/tag/ordered-set/"
        }
    ]
}