{
    "description": "Suppose LeetCode will start its <strong>IPO</strong> soon. In order to sell a good price of its shares to Venture Capital, LeetCode would like to work on some projects to increase its capital before the <strong>IPO</strong>. Since it has limited resources, it can only finish at most <code>k</code> distinct projects before the <strong>IPO</strong>. Help LeetCode design the best way to maximize its total capital after finishing at most <code>k</code> distinct projects.\n\nYou are given <code>n</code> projects where the <code>i<sup>th</sup></code> project has a pure profit <code>profits[i]</code> and a minimum capital of <code>capital[i]</code> is needed to start it.\n\nInitially, you have <code>w</code> capital. When you finish a project, you will obtain its pure profit and the profit will be added to your total capital.\n\nPick a list of <strong>at most</strong> <code>k</code> distinct projects from given projects to <strong>maximize your final capital</strong>, and return <em>the final maximized capital</em>.\n\nThe answer is guaranteed to fit in a 32-bit signed integer.\n\n",
    "tags": [
        {
            "name": "Array",
            "url": "https://leetcode.com/tag/array/"
        },
        {
            "name": "Greedy",
            "url": "https://leetcode.com/tag/greedy/"
        },
        {
            "name": "Sorting",
            "url": "https://leetcode.com/tag/sorting/"
        },
        {
            "name": "Heap (Priority Queue)",
            "url": "https://leetcode.com/tag/heap-priority-queue/"
        }
    ]
}