{
    "description": "You are given an <code>m x n</code> integer matrix <code>grid</code>, where you can move from a cell to any adjacent cell in all <code>4</code> directions.\n\nReturn <em>the number of <strong>strictly</strong> <strong>increasing</strong> paths in the grid such that you can start from <strong>any</strong> cell and end at <strong>any</strong> cell. </em>Since the answer may be very large, return it <strong>modulo</strong> <code>10<sup>9</sup> + 7</code>.\n\nTwo paths are considered different if they do not have exactly the same sequence of visited cells.\n\n",
    "tags": [
        {
            "name": "Array",
            "url": "https://leetcode.com/tag/array/"
        },
        {
            "name": "Dynamic Programming",
            "url": "https://leetcode.com/tag/dynamic-programming/"
        },
        {
            "name": "Depth-First Search",
            "url": "https://leetcode.com/tag/depth-first-search/"
        },
        {
            "name": "Breadth-First Search",
            "url": "https://leetcode.com/tag/breadth-first-search/"
        },
        {
            "name": "Graph",
            "url": "https://leetcode.com/tag/graph/"
        },
        {
            "name": "Topological Sort",
            "url": "https://leetcode.com/tag/topological-sort/"
        },
        {
            "name": "Memoization",
            "url": "https://leetcode.com/tag/memoization/"
        },
        {
            "name": "Matrix",
            "url": "https://leetcode.com/tag/matrix/"
        }
    ]
}