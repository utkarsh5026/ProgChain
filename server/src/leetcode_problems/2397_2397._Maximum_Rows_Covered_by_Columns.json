{
    "description": "You are given an <code>m x n</code> binary matrix <code>matrix</code> and an integer <code>numSelect</code>.\n\nYour goal is to select exactly <code>numSelect</code> <strong>distinct </strong>columns from <code>matrix</code> such that you cover as many rows as possible.\n\nA row is considered <strong>covered</strong> if all the <code>1</code>'s in that row are also part of a column that you have selected. If a row does not have any <code>1</code>s, it is also considered covered.\n\nMore formally, let us consider <code>selected = {c<sub>1</sub>, c<sub>2</sub>, ...., c<sub>numSelect</sub>}</code> as the set of columns selected by you. A row <code>i</code> is <strong>covered</strong> by <code>selected</code> if:\n\nReturn the <strong>maximum</strong> number of rows that can be <strong>covered</strong> by a set of <code>numSelect</code> columns.\n\n",
    "tags": [
        {
            "name": "Array",
            "url": "https://leetcode.com/tag/array/"
        },
        {
            "name": "Backtracking",
            "url": "https://leetcode.com/tag/backtracking/"
        },
        {
            "name": "Bit Manipulation",
            "url": "https://leetcode.com/tag/bit-manipulation/"
        },
        {
            "name": "Matrix",
            "url": "https://leetcode.com/tag/matrix/"
        },
        {
            "name": "Enumeration",
            "url": "https://leetcode.com/tag/enumeration/"
        }
    ]
}